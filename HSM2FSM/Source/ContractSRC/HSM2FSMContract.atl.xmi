<?xml version="1.0" encoding="ISO-8859-1"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:atl="http://www.eclipse.org/gmt/2005/ATL" xmlns:ocl="http://www.eclipse.org/gmt/2005/OCL">
  <atl:Module location="1:1-20:75" name="HSM2FSM">
    <commentsAfter>--@post</commentsAfter>
    <commentsAfter>--helper context FSM!StateMachine def: unique_fsm_sm_names(): Boolean = -- different target state machines have different names</commentsAfter>
    <commentsAfter>-- FSM!StateMachine.allInstances()->forAll(s1 | </commentsAfter>
    <commentsAfter>--  	FSM!StateMachine.allInstances()->forAll(s2 | </commentsAfter>
    <commentsAfter>--  	  s1&lt;>s2 implies s1.name&lt;>s2.name));</commentsAfter>
    <commentsAfter>--@post  </commentsAfter>
    <commentsAfter>--helper context FSM!AbstractState def: unique_fsm_state_names(): Boolean = -- states have unique names</commentsAfter>
    <commentsAfter>--  FSM!AbstractState.allInstances()->forAll(s1 |</commentsAfter>
    <commentsAfter>--  	FSM!AbstractState.allInstances()->forAll(s2 |</commentsAfter>
    <commentsAfter>--  	  s1&lt;>s2 implies s1.name&lt;>s2.name));	</commentsAfter>
    <commentsAfter>--@post</commentsAfter>
    <commentsAfter>--helper context FSM!AbstractState def: fsm_state_multi_lower(): Boolean = -- a state does belong to at least one state machine</commentsAfter>
    <commentsAfter>--  FSM!AbstractState.allInstances()->forAll(s | s.stateMachine.oclIsUndefined());</commentsAfter>
    <commentsAfter>--@post</commentsAfter>
    <commentsAfter>--helper context FSM!Transition def: fsm_transition_multi_lower(): Boolean = -- a transition does belong to at least one state machine</commentsAfter>
    <commentsAfter>--  FSM!Transition.allInstances()->forAll(t | t.stateMachine.oclIsUndefined());</commentsAfter>
    <commentsAfter>--@post</commentsAfter>
    <commentsAfter>--helper context FSM!Transition def: fsm_transition_src_multi_upper(): Boolean = -- a transition has at most one source [Not Deep]</commentsAfter>
    <commentsAfter>--  FSM!Transition.allInstances()->forAll(t | </commentsAfter>
    <commentsAfter>--   FSM!AbstractState.allInstances()->forAll(s1 | </commentsAfter>
    <commentsAfter>--      FSM!AbstractState.allInstances()->forAll(s2 |</commentsAfter>
    <commentsAfter>--       (t.source=s1 and t.source=s2) implies s1=s2)));</commentsAfter>
    <inModels location="3:23-3:31" name="IN" metamodel="/2"/>
    <outModels location="3:8-3:17" name="OUT" metamodel="/1"/>
    <elements xsi:type="atl:Helper" location="19:1-20:75">
      <commentsBefore>--POSTCONDITION FSM</commentsBefore>
      <commentsBefore>--@post</commentsBefore>
      <commentsBefore>--helper context FSM!Transition def: fsm_transition_src_multi_lower(): Boolean = -- a transition has at least one source</commentsBefore>
      <commentsBefore>--  FSM!Transition.allInstances()->forAll(t | t.source.oclIsUndefined());</commentsBefore>
      <commentsBefore>--@post</commentsBefore>
      <commentsBefore>--helper context FSM!Transition def: fsm_transition_trg_multi_lower(): Boolean = -- a transition has at least one target</commentsBefore>
      <commentsBefore>--  FSM!Transition.allInstances()->forAll(t | t.target.oclIsUndefined());</commentsBefore>
      <commentsBefore>--@post</commentsBefore>
      <commentsAfter>--@post</commentsAfter>
      <commentsAfter>--helper context FSM!StateMachine def: unique_fsm_sm_names(): Boolean = -- different target state machines have different names</commentsAfter>
      <commentsAfter>-- FSM!StateMachine.allInstances()->forAll(s1 | </commentsAfter>
      <commentsAfter>--  	FSM!StateMachine.allInstances()->forAll(s2 | </commentsAfter>
      <commentsAfter>--  	  s1&lt;>s2 implies s1.name&lt;>s2.name));</commentsAfter>
      <commentsAfter>--@post  </commentsAfter>
      <commentsAfter>--helper context FSM!AbstractState def: unique_fsm_state_names(): Boolean = -- states have unique names</commentsAfter>
      <commentsAfter>--  FSM!AbstractState.allInstances()->forAll(s1 |</commentsAfter>
      <commentsAfter>--  	FSM!AbstractState.allInstances()->forAll(s2 |</commentsAfter>
      <commentsAfter>--  	  s1&lt;>s2 implies s1.name&lt;>s2.name));	</commentsAfter>
      <commentsAfter>--@post</commentsAfter>
      <commentsAfter>--helper context FSM!AbstractState def: fsm_state_multi_lower(): Boolean = -- a state does belong to at least one state machine</commentsAfter>
      <commentsAfter>--  FSM!AbstractState.allInstances()->forAll(s | s.stateMachine.oclIsUndefined());</commentsAfter>
      <commentsAfter>--@post</commentsAfter>
      <commentsAfter>--helper context FSM!Transition def: fsm_transition_multi_lower(): Boolean = -- a transition does belong to at least one state machine</commentsAfter>
      <commentsAfter>--  FSM!Transition.allInstances()->forAll(t | t.stateMachine.oclIsUndefined());</commentsAfter>
      <commentsAfter>--@post</commentsAfter>
      <commentsAfter>--helper context FSM!Transition def: fsm_transition_src_multi_upper(): Boolean = -- a transition has at most one source [Not Deep]</commentsAfter>
      <commentsAfter>--  FSM!Transition.allInstances()->forAll(t | </commentsAfter>
      <commentsAfter>--   FSM!AbstractState.allInstances()->forAll(s1 | </commentsAfter>
      <commentsAfter>--      FSM!AbstractState.allInstances()->forAll(s2 |</commentsAfter>
      <commentsAfter>--       (t.source=s1 and t.source=s2) implies s1=s2)));</commentsAfter>
      <definition location="19:8-20:74">
        <feature xsi:type="ocl:Operation" location="19:36-20:74" name="fsm_transition_trg_multi_lower">
          <returnType xsi:type="ocl:BooleanType" location="19:70-19:77"/>
          <body xsi:type="ocl:IteratorExp" location="20:3-20:74" name="forAll">
            <commentsBefore>-- a transition has at least one target[Not Deep]</commentsBefore>
            <source xsi:type="ocl:OperationCallExp" location="20:3-20:32" operationName="allInstances">
              <commentsBefore>-- a transition has at least one target[Not Deep]</commentsBefore>
              <source xsi:type="ocl:OclModelElement" location="20:3-20:17" name="Transition" model="/1">
                <commentsBefore>-- a transition has at least one target[Not Deep]</commentsBefore>
              </source>
            </source>
            <body xsi:type="ocl:OperatorCallExp" location="20:44-20:73" operationName="not">
              <source xsi:type="ocl:OperationCallExp" location="20:48-20:73" operationName="oclIsUndefined">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="20:48-20:56" name="source">
                  <source xsi:type="ocl:VariableExp" location="20:48-20:49" referredVariable="/0/@elements.0/@definition/@feature/@body/@iterators.0"/>
                </source>
              </source>
            </body>
            <iterators location="20:41-20:42" varName="t" variableExp="/0/@elements.0/@definition/@feature/@body/@body/@source/@source/@source"/>
          </body>
        </feature>
        <context_ location="19:8-19:30">
          <context_ xsi:type="ocl:OclModelElement" location="19:16-19:30" name="Transition" model="/1"/>
        </context_>
      </definition>
    </elements>
  </atl:Module>
  <ocl:OclModel location="3:14-3:17" name="FSM" elements="/0/@elements.0/@definition/@context_/@context_ /0/@elements.0/@definition/@feature/@body/@source/@source" model="/0/@outModels.0"/>
  <ocl:OclModel location="3:28-3:31" name="HSM" model="/0/@inModels.0"/>
</xmi:XMI>
